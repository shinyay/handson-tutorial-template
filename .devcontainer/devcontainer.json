{
  "name": "Google Codelabs Tutorial Development",
  "dockerComposeFile": "docker-compose.yml",
  "service": "devcontainer",
  "workspaceFolder": "/workspace",
  "shutdownAction": "stopCompose",

  // Configure tool-specific properties.
  "customizations": {
    "vscode": {
      "extensions": [
        // GitHub Copilot
        "GitHub.copilot",
        "GitHub.copilot-chat",
        
        // Markdown support
        "yzhang.markdown-all-in-one",
        "DavidAnson.vscode-markdownlint",
        "bierner.markdown-mermaid",
        "bierner.markdown-preview-github-styles",
        
        // YAML support
        "redhat.vscode-yaml",
        
        // Docker support
        "ms-azuretools.vscode-docker",
        
        // Git support
        "eamodio.gitlens",
        
        // Shell scripting
        "timonwong.shellcheck",
        "mads-hartmann.bash-ide-vscode",
        
        // Live Preview
        "ms-vscode.live-server",
        
        // Utility extensions
        "streetsidesoftware.code-spell-checker",
        "esbenp.prettier-vscode",
        "bradlc.vscode-tailwindcss"
      ],
      "settings": {
        // Markdown settings
        "markdown.preview.breaks": true,
        "markdown.preview.linkify": true,
        "[markdown]": {
          "editor.wordWrap": "on",
          "editor.quickSuggestions": {
            "comments": "off",
            "strings": "off",
            "other": "off"
          }
        },
        
        // YAML settings
        "yaml.schemas": {
          "file:///workspace/config/tutorial-config.yaml": "/config/*.yaml"
        },
        
        // File associations
        "files.associations": {
          "*.md": "markdown",
          "*.yaml": "yaml",
          "*.yml": "yaml"
        },
        
        // Terminal settings
        "terminal.integrated.defaultProfile.linux": "bash",
        "terminal.integrated.profiles.linux": {
          "bash": {
            "path": "/bin/bash",
            "args": ["-l"]
          }
        },
        
        // Git settings
        "git.autofetch": true,
        "git.confirmSync": false,
        
        // Copilot settings
        "github.copilot.enable": {
          "*": true,
          "markdown": true,
          "yaml": true,
          "plaintext": false
        }
      }
    }
  },

  // Features to add to the dev container. More info: https://containers.dev/features.
  "features": {
    "ghcr.io/devcontainers/features/git:1": {},
    "ghcr.io/devcontainers/features/github-cli:1": {},
    "ghcr.io/devcontainers/features/go:1": {
      "version": "latest"
    },
    "ghcr.io/devcontainers/features/node:1": {
      "version": "lts"
    }
  },

  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  "forwardPorts": [
    9090,  // claat serve default port
    8080,  // nginx default port
    3000   // common development port
  ],

  // Configure port attributes
  "portsAttributes": {
    "9090": {
      "label": "Claat Server",
      "protocol": "http"
    },
    "8080": {
      "label": "Nginx Server", 
      "protocol": "http"
    },
    "3000": {
      "label": "Development Server",
      "protocol": "http"
    }
  },

  // Use 'postCreateCommand' to run commands after the container is created.
  "postCreateCommand": "bash /workspace/.devcontainer/post-create.sh",

  // Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
  "remoteUser": "vscode",

  // Mount the workspace
  "mounts": [
    "source=${localWorkspaceFolder},target=/workspace,type=bind,consistency=cached"
  ]
}
